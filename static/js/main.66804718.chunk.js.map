{"version":3,"sources":["components/Streams/List.js","components/Streams/List copy.js","components/Streams/Video.js","apis/streams.js","history.js","components/SearchBar.js","actions/index.js","components/Header.js","components/App.js","reducers/index.js","reducers/youtubelist.js","index.js"],"names":["StreamList","renderList","undefined","props","list","console","log","map","video","id","kind","to","videoId","className","key","src","snippet","thumbnails","medium","url","alt","title","channelTitle","videodesc","description","publishedAt","vdesc","length","words","split","this","Component","connect","state","Video","renderVideo","match","params","videoSrc","axios","create","baseURL","part","type","maxResults","createHashHistory","SearchBar","term","onInputChange","e","setState","target","value","onFormSubmit","event","preventDefault","fetch","history","push","onSubmit","autoComplete","onChange","React","dispatch","a","streams","get","response","payload","data","Header","class","href","App","path","exact","component","List","combineReducers","action","items","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.66804718.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './videoItem.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass StreamList extends Component {\r\n\r\n  renderList=()=>{\r\n    \r\n      if (this.props.list.list !== undefined) {\r\n        console.log(this.props.list.list)\r\n        return this.props.list.list.map(video =>{\r\n            if(video.id.kind === 'youtube#video'){\r\n            return(\r\n                \r\n            <Link to={`/video/${video.id.videoId}`}  className=\" video-item item\" key={video.id.videoId}>\r\n                 \r\n                <img  className=\"ui image\" src={video.snippet.thumbnails.medium.url} alt ={video.snippet.title}/>\r\n        \r\n                <div className=\"content\">\r\n                    <div className=\"header\">\r\n                        {video.snippet.title}<br/>by:{video.snippet.channelTitle}\r\n                    </div>\r\n                    <p>\r\n                    {this.videodesc(video.snippet.description)}\r\n                </p>\r\n                <p>\r\n                {video.snippet.publishedAt}\r\n                </p>\r\n                </div>\r\n                \r\n            \r\n            </Link>\r\n            \r\n            )\r\n        }})\r\n        }\r\n      }\r\n      \r\n      videodesc = (vdesc)=>{\r\n        var str = vdesc.length;\r\n        if (str <= 100){\r\n        return vdesc\r\n        }else{\r\n            const words = vdesc.split(' ');\r\n            return (words[0]+' '+words[1]+' '+words[2]+' ' +words[3]+' '+words[4]+' '+words[5]+' '+words[6]+' '+words[7]+' ' +'...')\r\n        }\r\n    }\r\n    // return this.props.streams.map(stream =>{\r\n    //   return(\r\n    //     <div className='item' key={stream.id}>\r\n          \r\n    //       {this.renderAdmin(stream)}\r\n    //       <i className=\"large middle aligned icon camera\"/>\r\n    //       <div className=\"content\">\r\n    //         <Link to={`/streams/${stream.id}`}className=\"header\">{stream.title}</Link>\r\n\r\n    //       <div className='description'>\r\n    //       {stream.description}\r\n    //       </div>\r\n    //       </div>\r\n          \r\n          \r\n    //     </div>\r\n        \r\n    //   )\r\n    // })\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n    <div className='ui celled list'>{this.renderList()}</div>\r\n      {/* <div className='ui celled list'>{this.renderList()}</div>\r\n      {this.renderCreate()} */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.list\r\n  };\r\n}\r\n\r\n export default connect(mapStateToProps)(StreamList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './videoItem.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass StreamList extends Component {\r\n\r\n  renderList=()=>{\r\n    \r\n      if (this.props.list.list !== undefined) {\r\n        console.log(this.props.list.list)\r\n        return this.props.list.list.map(video =>{\r\n            if(video.id.kind === 'youtube#video'){\r\n            return(\r\n                \r\n            <Link to={`/video/${video.id.videoId}`}  className=\" video-item item\" key={video.id.videoId}>\r\n                 \r\n                <img  className=\"ui image\" src={video.snippet.thumbnails.medium.url} alt ={video.snippet.title}/>\r\n        \r\n                <div className=\"content\">\r\n                    <div className=\"header\">\r\n                        {video.snippet.title}<br/>by:{video.snippet.channelTitle}\r\n                    </div>\r\n                    <p>\r\n                    \r\n                </p>\r\n                <p>\r\n                {video.snippet.publishedAt}\r\n                </p>\r\n                </div>\r\n                \r\n            \r\n            </Link>\r\n            \r\n            )\r\n        }})\r\n        }\r\n      }\r\n      \r\n      \r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n    <div className='ui celled list'>{this.renderList()}</div>\r\n      {/* <div className='ui celled list'>{this.renderList()}</div>\r\n      {this.renderCreate()} */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.list\r\n  };\r\n}\r\n\r\n export default connect(mapStateToProps)(StreamList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport VideoList from './List copy'\r\nclass Video extends Component {\r\n    renderVideo=()=>{\r\n    \r\n        if (this.props.list.list !== undefined) {\r\n        return this.props.list.list.map(video =>{\r\n            if(this.props.match.params.id === video.id.videoId){\r\n                \r\n            const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n            return (\r\n                <div key={video.id.videoId}>\r\n                    <div className=\"ui embed\">\r\n                        <iframe src={videoSrc}  title=\"video player\"/>\r\n                    </div>\r\n                    <div className= 'ui segment'>\r\n                        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n                        <div className=\"ui grid\">\r\n                            <div className=\" four column row ped\">\r\n                                <p>\r\n                                    Uploaded:  {video.snippet.publishedAt}   \r\n                                </p>\r\n                                <div className =\"right floated column\">\r\n                                    <a className=\" ui button red\">\r\n                                    Sub to: <br/>{video.snippet.channelTitle}\r\n                                    </a>\r\n                                    \r\n                                </div>\r\n                            \r\n                        \r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <p>{video.snippet.description}</p>\r\n                </div>\r\n                </div>\r\n                )\r\n            }\r\n            \r\n        }\r\n        )\r\n    }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"ui grid\">\r\n            <div className=\"ui row\">\r\n                <div className =\"eleven wide column\">\r\n                {this.renderVideo()}\r\n                </div>\r\n                <div className=\"five wide column\">\r\n                    <VideoList/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                \r\n            \r\n        )\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      list: state.list\r\n    };\r\n  }\r\n  \r\n   export default connect(mapStateToProps)(Video)\r\n","import axios from 'axios'\r\n\r\n// export default axios.create({\r\n//     baseURL:'http://localhost:3001'\r\n// })\r\n\r\nconst KEY = 'AIzaSyAsHvJdN3qI9pP9SAUuTwVcysW3dLlXlhA';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n      part: 'snippet', \r\n      type: 'video',\r\n      maxResults: 10,\r\n      key: KEY\r\n  }\r\n});\r\n","import { createHashHistory } from 'history'; \r\nexport default createHashHistory();","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { fetch } from '../actions';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport history from '../history';\r\n\r\nclass SearchBar extends React.Component{\r\n    state = {term: ''};\r\n    componentDidMount(){\r\n        \r\n        this.props.fetch('latest')\r\n    }\r\n    onInputChange =(e) =>{\r\n        this.setState({term: e.target.value});\r\n    };\r\n    \r\n    onFormSubmit =event =>{\r\n    event.preventDefault();// DOSEN'T refesh\r\n        console.log(this.state.term)\r\n        this.props.fetch(this.state.term)\r\n        history.push('/')\r\n        // this.props.onFormSubmit(this.state.term);\r\n    };\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"search-bar ui segment\">\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className=\"feild\">\r\n                        <label>Video Search</label>\r\n                        <input autoComplete ='on'\r\n                         type=\"text\" \r\n                         value={this.state.term}\r\n                         onChange={this.onInputChange}\r\n                         />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//      term: (state.term)\r\n//     };\r\n//   }\r\n  \r\n  // const mapDispatchToProps = {\r\n    \r\n  // }\r\n  \r\n   export default connect(null,{fetch})(SearchBar)","import streams from '../apis/streams'\r\n\r\n\r\n\r\nexport const fetch= (title) => async dispatch =>{\r\n    const response = await streams.get(`/search?part=snippet&maxResults=30&q=${title}&safeSearch=moderate&key=AIzaSyAsHvJdN3qI9pP9SAUuTwVcysW3dLlXlhA`)\r\n    dispatch({type:'FETCH_LIST',payload: response.data})\r\n}\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SearchBar from './SearchBar'\r\n\r\nconst Header = () =>{\r\n  return (\r\n    <div className='rtt'>\r\n    <div className=\"ui secondary pointing menu\">\r\n        <Link to=\"/\" className=\"ui blue button\">\r\n        <i class=\"yellow large eye icon\"></i>Tube\r\n        </Link>\r\n\r\n        <div className=\"right menu\">\r\n        <a href=\"https://jtbspace.tech/\" target=\"_default\" className=\"ui inverted green button\">\r\n            Author\r\n        </a>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n    <SearchBar/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport { HashRouter, Route, Switch,} from 'react-router-dom';\nimport List from './Streams/List'\nimport Video from './Streams/Video'\nimport './App.css'\n\nimport Header from './Header'\nimport history from '../history'\n\nconst App = () =>{\n  return (\n    <div className=\"ui container ep\">\n      \n      <HashRouter history={history}>\n      <div> \n      <Header/>\n      \n      \n        <Switch>\n         <Route path=\"/\" exact component={List}/>\n         <Route path=\"/video/:id\" component={Video}/>\n        </Switch>\n\n        </div>\n      </HashRouter>\n      <h3>Powered By YouTube API</h3>\n      <br/>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport youtube from './youtubelist'\r\n\r\nexport default combineReducers({\r\n    list: youtube\r\n})","import _ from 'lodash'\r\n\r\nexport default( state = {}, action) =>{\r\n    switch(action.type){\r\n        case 'FETCH_LIST':\r\n            return { ...state,['list']:action.payload.items};\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n  )\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n    ,\n  document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}